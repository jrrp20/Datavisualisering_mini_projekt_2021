ggplot(expmean100_df, aes(x = x)) +
geom_histogram(binwidth=0.02, color = "black", fill = "white")+
scale_x_continuous(breaks = c(0,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1,1.2,1.4))+
theme_binom
library(mosaic)
options(digits = 4)
climate <- as.table(matrix(c(309,4918,1010,25830),2))
dimnames(climate) <- list(origin=c("Denmark","Rest of EU"),answer=c("Yes","No"))
climate
totalyes <- climate[1,1]+climate[2,1]
total <- sum(climate)
totalyes/total
binom.test(totalyes,total)
DKyes <- climate[1,1]
DKtotal <- sum(climate[1,])
ProbDKyes <- DKyes / DKtotal
ProbDKyes
chisq.test(climate)
totalyes_Denmark <- climate[1,1]
total_Denmark <- sum(climate[1,])
totalyes_Denmark/total_Denmark
climate
totalyes_Denmark <- climate[1,1]
total_Denmark <- sum(climate[1,])
totalyes_Denmark/total_Denmark
chisq.test(climate)
prop.test(climate)
chisq.test(climate)
totalyesEU <- climate[2,1]
totalEU <- sum(climate[2,])
totalyesEU/totalEU
binom.test(totalyes, total)
standarderror <- sqrt(0.163 * (1 - 0.163) / 32067)
0.163 - 1.96 * standarderror
0.163 + 1.96 * standarderror
standarderror <- sqrt(0.163 * (1 - 0.163) / 32067)
0.163 - 1.96 * standarderror
0.163 + 1.96 * standarderror
chisq.test(climate)
prop.test(climate)
chisq.test(climate)
prop.test(climate)
chisq.test(climate)
chisq.test(climate)
load(url("https://asta.math.aau.dk/datasets?file=Home.RData"))
gf_histogram(~price_small, bins = 30)
gf_histogram(~price, bins = 30)
gf_histogram(~price, bins = 30)
weighted.mean(price)
expected_value <- (1 / length(price))*sum(price)
expected_value
weighted.mean(price)
expected_value
price
load(url("https://asta.math.aau.dk/datasets?file=Home.RData"))
expected_value <- (sum(price) / length(price))
expected_value
mean(price)
mean_price <- (sum(price) / length(price))
mean_price
sd(price)
std_error <- sd(price) / sqrt(40)
std_error
sd(price)
std_error <- sd(price) / sqrt(40)
std_error
y <- sample(price, 40)
mean(y)
y <- sample(price, 40)
mean(y)
y <- sample(price, 40)
mean(y)
y <- sample(price, 40)
mean(y)
y <- sample(price, 40)
mean(y)
y <- sample(price, 40)
mean(y)
y <- sample(price, 40)
mean(y)
y <- sample(price, 40)
mean(y)
y <- sample(price, 40)
mean(y)
y <- sample(price, 40)
mean(y)
y <- sample(price, 40)
mean(y)
y <- sample(price, 40)
mean(y)
y <- sample(price, 40)
mean(y)
y_bar <- replicate(500, mean(sample(price, 40)))
mean(y_bar)
sd(y_bar)
mean(y_bar)
sd(y_bar)
gf_dhistogram( ~ y_bar, bins = 50) %>%
gf_dist("norm", mean = expected_value, sd = std_error, col = "red")
summary(y_bar)
boxplot(y_bar)
summary(y_bar)
boxplot(y_bar)
expected_value
qdist("norm", c(0.25, 0.75))
qdist("norm", c(0.25, 0.75), plot = F)
qdist("norm", c(0.25, 0.75))
IQR_value <- 0.6745+6745
IQR_value <- 0.6745+0.6745
IQR_value
0.67545+1.5*IQR_value
IQR_value <- 0.6745+0.6745
IQR_value
0.67545+1.5*IQR_value
-0.67545-1.5*IQR_value
vector <- c(-2.699, 2.699)
pdist("norm", vector)
pdist("norm", vector, plot = F)
pdist("norm", vector)
reading <- read.delim("https://asta.math.aau.dk/datasets?file=reading.txt")
head(reading)
tail(reading)
head(reading)
tail(reading)
gf_histogram( ~ Score | Group, data = reading, bins = 15, fill = "skyblue", color = "black")
gf_boxplot(Group == "Treated" ~ Score, data = reading)
favstats(reading$Group == "Treated")
favstats(reading$Group == "Control")
favstats(~ Score | Group, data = reading)
qdist("t", c(0.025, 0.975), df=20, plot = FALSE)
51.48 + 2.085963*11.007/sqrt(21)
51.48 - 2.085963*11.007/sqrt(21)
t.test(~ Score | Group, data = reading)
options(digits = 10)
t.test(~ Score | Group, data = reading)
options(digits = 6)
t.test(~ Score | Group, data = reading)
qdist("norm", 0.95, plot=FALSE)
qdist("norm", 0.95)
qdist("norm", c(0.025,0975))
qdist("norm", c(0.025,0975))
qdist("norm", c(0.05,095))
qdist("norm", c(0.05,0.95))
qdist("norm", c(0.05,0.95), plot = F)
z <- 1.644854
M <- 0.05
(z^2*0.5*(1-0.5))/M^2
(z^2*0.225*(1-0.225))/M^2
x2  <- 1:5
y2 <- dbinom(x2, 6, 0.5)
y2
y2_1 <- c(sum(y2[1]),sum(y2[1:2]),sum(y2[1:3]),sum(y2[1:4]),1)
df_binom2 <- data.frame(x = x2, y = dbinom(x2, 6, 0.5))
df_akkum1 <- data.frame(x=x2, y = y2_1)
ggplot(df_binom2, aes(x = x, y = y)) + geom_bar(stat = "identity", col = "black", fill = "white") +
scale_y_continuous(expand = c(0.01, 0)) + xlab("Antal Succeser") + ylab(expression(P[x](x)))+theme_histo
library(ggplot2)
library(tidyverse)
library(latex2exp)
library(cowplot)
library(grid)
ggplot(df_binom2, aes(x = x, y = y)) + geom_bar(stat = "identity", col = "black", fill = "white") +
scale_y_continuous(expand = c(0.01, 0)) + xlab("Antal Succeser") + ylab(expression(P[x](x)))+theme_histo
#Themes
theme_histo <- theme_bw()+theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title.y = element_blank(),
axis.title=element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size=20,colour = "black")
)
theme_histo2 <- theme_bw()+theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title = element_text(size = 20, colour = "black"),
axis.text.x = element_text(size=20,colour = "black"),
axis.text.y = element_text(size=20,colour = "black"),
axis.title.y = element_blank())
ggplot(df_binom2, aes(x = x, y = y)) + geom_bar(stat = "identity", col = "black", fill = "white") +
scale_y_continuous(expand = c(0.01, 0)) + xlab("Antal Succeser") + ylab(expression(P[x](x)))+theme_histo
ggplot(data = data.frame(x = c(-3.3, 3.32)), aes(x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 0, sd = 1)) +
coord_cartesian(ylim = c(0.018, 0.4),xlim = c(-3,3), clip = "off")+
geom_segment(x = 0, y = 0, xend = 0, yend =0.399, linetype = "dashed")+
geom_segment(x = -1.955, y = 0, xend = -1.955, yend =0.059, linetype = "dashed")+
xlab(TeX(r'($H_0 = 0$)'))+
ggtitle("To-sidet hypotesetest")+
geom_text(x=1.96, y=-0.02, label=TeX(r'($\frac{\alpha}{2}$)'))+
geom_text(x=-1.96, y=-0.02, label=TeX(r'($\frac{\alpha}{2}$)'))+
stat_function(fun = dnorm,
xlim = c(1.96,3.3),
geom = "area",
fill = "gray60")+
stat_function(fun = dnorm,
xlim = c(-1.96,-3.3),
geom = "area",
fill = "gray60")+
geom_segment(x = 1.955, y = 0, xend = 1.955, yend =0.059, linetype = "dashed")+
geom_segment(aes(x = -1.96, y = 0.04, xend = 1.96, yend = 0.04),
arrow = arrow(length = unit(0.3, "cm")))+
geom_segment(aes(x = 1.96, y = 0.04, xend = -1.96, yend = 0.04),
arrow = arrow(length = unit(0.3, "cm")))+
geom_text(x=-0.3, y=0.05, label="95%")+
theme_hypo
theme_binom <- theme_bw()+theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title = element_blank(),
axis.text.x = element_text(size=20,colour = "black"),
axis.text.y = element_blank())
theme_hypo <- theme_bw()+theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.title = element_text(size=20,colour = "black", hjust = 0.5),
axis.title.y = element_blank(),
axis.title.x = element_text(size=20,colour = "black"),
axis.text.x = element_blank(),
axis.text.y = element_blank())
ggplot(data = data.frame(x = c(-3.3, 3.32)), aes(x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 0, sd = 1)) +
coord_cartesian(ylim = c(0.018, 0.4),xlim = c(-3,3), clip = "off")+
geom_segment(x = 0, y = 0, xend = 0, yend =0.399, linetype = "dashed")+
geom_segment(x = -1.955, y = 0, xend = -1.955, yend =0.059, linetype = "dashed")+
xlab(TeX(r'($H_0 = 0$)'))+
ggtitle("To-sidet hypotesetest")+
geom_text(x=1.96, y=-0.02, label=TeX(r'($\frac{\alpha}{2}$)'))+
geom_text(x=-1.96, y=-0.02, label=TeX(r'($\frac{\alpha}{2}$)'))+
stat_function(fun = dnorm,
xlim = c(1.96,3.3),
geom = "area",
fill = "gray60")+
stat_function(fun = dnorm,
xlim = c(-1.96,-3.3),
geom = "area",
fill = "gray60")+
geom_segment(x = 1.955, y = 0, xend = 1.955, yend =0.059, linetype = "dashed")+
geom_segment(aes(x = -1.96, y = 0.04, xend = 1.96, yend = 0.04),
arrow = arrow(length = unit(0.3, "cm")))+
geom_segment(aes(x = 1.96, y = 0.04, xend = -1.96, yend = 0.04),
arrow = arrow(length = unit(0.3, "cm")))+
geom_text(x=-0.3, y=0.05, label="95%")+
theme_hypo
ggplot(data = data.frame(x = c(-3.3, 3.32)), aes(x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 0, sd = 1)) +
coord_cartesian(ylim = c(0.018, 0.4),xlim = c(-3,3), clip = "off")+
geom_segment(x = 0, y = 0, xend = 0, yend =0.399, linetype = "dashed")+
xlab(TeX(r'($H_0 = 0$)'))+
ggtitle("En-sidet hypotesetest")+
geom_text(x=1.644854, y=-0.01, label=TeX(r'($\alpha$)'))+
stat_function(fun = dnorm,
xlim = c(1.644854,3.3),
geom = "area",
fill = "gray60")+
geom_segment(x = 1.634854, y = 0, xend = 1.634854, yend = 0.106, linetype = "dashed")+
geom_segment(aes(x = -3, y = -0.035, xend = 1.63485, yend = -0.035),
arrow = arrow(length = unit(0.3, "cm")))+
geom_segment(aes(x = 1.63485, y = -0.035, xend = -3.3, yend = -0.035),
arrow = arrow(length = unit(0.3, "cm")))+
geom_text(x=-1, y=-0.025, label="95%")+
theme_hypo
qdist("norm", p = 0.05, mean = 0, sd = 1, xlim = c(-4, 4))
ggplot(data = data.frame(x = c(0, 6)), aes(x)) +
stat_function(fun = dnorm, n = 101, args = list(mean = 3, sd = 1)) +
scale_y_continuous(breaks = c(0.25,0.5,0.75,1))+
scale_x_continuous(breaks = c(0,1,2,3,4,5,6))+
geom_segment(aes(x = 0,
y = 1, xend = 10,
yend = 1),
linetype="dashed")+
coord_cartesian(ylim = c(0, 1),xlim = c(0.5,5.4))+
theme_histo+xlab("Udfald for x") +
ylab("Akkumueret \n sandsynlighed")
ggplot(df_binom2, aes(x=heads)) + geom_histogram(bins = 15,color="black", fill="white")+theme_histo
ggplot(df_binom2, aes(x=heads)) + geom_histogram(bins = 15,color="black", fill="white")+theme_histo
x1  <- 3:17
df_binom <- data.frame(x = x1, y = dbinom(x1, 20, 0.5))
ggplot(df_binom, aes(x = x, y = y)) + geom_bar(stat = "identity", col = "black", fill = "white") +
scale_y_continuous(expand = c(0.01, 0)) + xlab("x") + ylab("Densitet")+theme_histo
ggplot(binom_data, aes(x=Number)) + geom_histogram()
x2  <- 1:5
y2 <- dbinom(x2, 6, 0.5)
y2
y2_1 <- c(sum(y2[1]),sum(y2[1:2]),sum(y2[1:3]),sum(y2[1:4]),1)
df_binom2 <- data.frame(x = x2, y = dbinom(x2, 6, 0.5))
df_akkum1 <- data.frame(x=x2, y = y2_1)
ggplot(df_binom2, aes(x = x, y = y)) + geom_bar(stat = "identity", col = "black", fill = "white") +
scale_y_continuous(expand = c(0.01, 0)) + xlab("Antal Succeser") + ylab(expression(P[x](x)))+theme_histo
theme_histo2 <- theme_bw()+theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.title = element_text(size = 20, colour = "black"),
axis.text.x = element_text(size=20,colour = "black"),
axis.text.y = element_text(size=20,colour = "black"))
ggplot(df_akkum1, aes(x = x, y = y), bins =5) +
geom_histogram(stat = "identity", col = "black", fill = "white", bins = 5)+
xlab("Antal succeser") + ylab(expression(P[x](x)))+
geom_segment(aes(x = 0,
y = 1, xend = 10,
yend = 1),
linetype="dashed")+
coord_cartesian(ylim = c(0, 1),xlim = c(0.5,5.5))+
theme_histo2
ggplot(df_akkum1, aes(x = x, y = y), bins =5) +
geom_histogram(stat = "identity", col = "black", fill = "white", bins = 5)+
xlab("Antal succeser") + ylab(expression(P[x](x)))+
geom_segment(aes(x = 0,
y = 1, xend = 10,
yend = 1),
linetype="dashed")+
coord_cartesian(ylim = c(0, 1),xlim = c(0.5,5.5))+
theme_histo2
ggplot(df_binom2, aes(x = x, y = y)) + geom_bar(stat = "identity", col = "black", fill = "white") +
scale_y_continuous(expand = c(0.01, 0)) + xlab("Antal Succeser") + ylab(expression(P[x](x)))+theme_histo
ggplot(df_binom2, aes(x = x, y = y)) + geom_bar(stat = "identity", col = "black", fill = "white") +
scale_y_continuous(expand = c(0.01, 0)) + xlab("Antal Succeser") + ylab(expression(P[x](x)))+theme_histo2
x2  <- 0:4
y2 <- dbinom(x2, 5, 0.5)
df_binom2 <- data.frame(x = x2, y = dbinom(x2, 5, 0.5))
ggplot(df_binom2, aes(x = x, y = y)) + geom_bar(stat = "identity", col = "black", fill = "white") +
scale_y_continuous(expand = c(0.01, 0)) + xlab("Antal Succeser") + ylab(expression(P[x](x)))+theme_histo2
y2 <- dbinom(x2, 5, 0.5)
y2
df_binom2 <- data.frame(x = x2, y = dbinom(x2, 6, 0.5))
ggplot(df_binom2, aes(x = x, y = y)) + geom_bar(stat = "identity", col = "black", fill = "white") +
scale_y_continuous(expand = c(0.01, 0)) + xlab("Antal Succeser") + ylab(expression(P[x](x)))+theme_histo2
y2 <- dbinom(x2, 4, 0.5)
df_binom2 <- data.frame(x = x2, y = dbinom(x2, 6, 0.5))
ggplot(df_binom2, aes(x = x, y = y)) + geom_bar(stat = "identity", col = "black", fill = "white") +
scale_y_continuous(expand = c(0.01, 0)) + xlab("Antal Succeser") + ylab(expression(P[x](x)))+theme_histo2
df_binom2 <- data.frame(x = x2, y = dbinom(x2, 4, 0.5))
ggplot(df_binom2, aes(x = x, y = y)) + geom_bar(stat = "identity", col = "black", fill = "white") +
scale_y_continuous(expand = c(0.01, 0)) + xlab("Antal Succeser") + ylab(expression(P[x](x)))+theme_histo2
df_binom2 <- data.frame(x = x2, y = dbinom(x2, 5, 0.5))
ggplot(df_binom2, aes(x = x, y = y)) + geom_bar(stat = "identity", col = "black", fill = "white") +
scale_y_continuous(expand = c(0.01, 0)) + xlab("Antal Succeser") + ylab(expression(P[x](x)))+theme_histo2
y2 <- dbinom(x2, 5, 0.5)
df_binom2 <- data.frame(x = x2, y = dbinom(x2, y2, 0.5))
ggplot(df_binom2, aes(x = x, y = y)) + geom_bar(stat = "identity", col = "black", fill = "white") +
scale_y_continuous(expand = c(0.01, 0)) + xlab("Antal Succeser") + ylab(expression(P[x](x)))+theme_histo2
df_binom2 <- data.frame(x = x2, y = dbinom(x2, y2, 0.5))
y2 <- dbinom(x2, 5, 0.5)
ggplot(df_binom2, aes(x = x, y = y)) + geom_bar(stat = "identity", col = "black", fill = "white") +
scale_y_continuous(expand = c(0.01, 0)) + xlab("Antal Succeser") + ylab(expression(P[x](x)))+theme_histo2
vitcap <- read.delim("http://asta.math.aau.dk/dan/static/datasets?file=vitcap.txt")
head(vitcap)
library(mosaic)
gf_boxplot(vital.capacity ~ exposure, data = vitcap)
model_vitcap <- lm(vital.capacity ~ exposure, data = vitcap)
summary(model_vitcap)
gf_boxplot(vital.capacity ~ exposure, data = vitcap)
model_vitcap <- lm(vital.capacity ~ exposure, data = vitcap)
summary(model_vitcap)
model_vitcap_age <- lm(vital.capacity ~ exposure + age, data = vitcap)
model_vitcap_gange_age <- lm(vital.capacity ~ exposure * age, data = vitcap)
summary(model_vitcap_age)
summary(model_vitcap_age)
summary(vitcap)
vitcap
anova(model_vitcap_age,model_vitcap_gange_age)
summary(model_vitcap_gange_age)
summary(model_vitcap_gange_age)
anova(model_vitcap_age,model_vitcap_gange_age)
pearson(model_vitcap_gange_age)
Pearson(model_vitcap_gange_age)
pearson(model_vitcap_gange_age)
pearson(model_vitcap_gange_age)
gf_point(vital.capacity ~ age, color = ~exposure, data = vitcap) %>% gf_lm()
model1 <- lm(vital.capacity ~ age*z2, data = vitcap)
model2 <- lm(vital.capacity ~ age*z1 + age*z2, data = vitcap)
summary(model1)
summary(model2)
anova(model1,model2)
summary(model2)
summary(model_vitcap_age)
summary(model1)
summary(model1)
summary(model1)
plot(model1)
summary(model1)
summary(model1)
summary(model1)
summary(model2)
plot(model1)
summary(model1)
summary(model2)
plot(model1)
plot(5.8-0.03*x)
plot(5.8-0.03*[1:100])
admit <- matrix(c(1198, 557, 1493, 1278), 2, 2)
rownames(admit) <- c("Male", "Female")
colnames(admit) <- c("Admitted", "Rejected")
admit <- as.table(admit)
admit
admitTest <- chisq.test(admit)
admitTest
sum(admit[,1])/sum(admit)
sum(admit[,2])/sum(admit)
sum(admit[,1])/sum(admit)
sum(admit[,2])/sum(admit)
(1198+1493)*0.3877596
(1198+1493)*0.6122404
(557+1278)*0.3877596
(557+1278)*0.6122404
admit_expected <- rbind(c(1043,1648),c(712,1123))
rownames(admit_expected) <- c("Male", "Female")
colnames(admit_expected) <- c("Admitted", "Rejected")
admit_expected
((admit[1,1]-admit_expected[1,1])^2)/admit_expected[1,1]+((admit[1,2]-admit_expected[1,2])^2)/admit_expected[1,2]+((admit[2,1]-admit_expected[2,1])^2)/admit_expected[2,1]+((admit[2,2]-admit_expected[2,2])^2)/admit_expected[2,2]
1-pdist("chisq", 92.74936, df = 1, plot = FALSE)
sum(admit$admitted)/sum(admit)
sum(admit$rejected)/sum(admit)
admission <-
read.table("http://asta.math.aau.dk/dan/static/datasets?file=admission.dat",
header=TRUE)
admission
m0 <- glm(cbind(Admit, Reject) ~ Gender + Dept, family = binomial, data = admission)
m0 <- glm(cbind(Admit, Reject) ~ Gender + Dept, family = binomial, data = admission)
m0 <- glm(cbind(Admit, Reject) ~ Gender + Dept, family = binomial, data = admission)
m1 <- glm(cbind(Admit, Reject) ~ 1, family = binomial, data = admission)
m0 <- glm(cbind(Admit, Reject) ~ Gender + Dept, family = binomial, data = admission)
m1 <- glm(cbind(Admit, Reject) ~ 1, family = binomial, data = admission)
anova(m1,m0, test= "Chisq")
summary(m0)
summary(m1)
We add the standardized residuals to `admission`:
admission$stdRes <- round(rstandard(m0),2)
admission
m2 <- glm(cbind(Admit, Reject) ~ Gender * Dept, family = binomial, data = admission)
```{r}
anova(m0,m2,test="Chisq")
summary(m2)
```
m2 <- glm(cbind(Admit, Reject) ~ Gender * Dept, family = binomial, data = admission)
```{r}
anova(m0,m2,test="Chisq")
summary(m2)
```
anova(m0,m2,test="Chisq")
summary(m2)
anova(m0,m2,test="Chisq")
summary(m2)
vitcap <- read.delim("http://asta.math.aau.dk/dan/static/datasets?file=vitcap.txt")
vitcap <- read.delim("http://asta.math.aau.dk/dan/static/datasets?file=vitcap.txt")
head(vitcap)
vitcap
library(mosaic)
gf_boxplot(vital.capacity ~ exposure, data = vitcap)
model_vitcap <- lm(vital.capacity ~ exposure, data = vitcap)
summary(model_vitcap)
model_vitcap_age <- lm(vital.capacity ~ exposure + age, data = vitcap)
model_vitcap_gange_age <- lm(vital.capacity ~ exposure * age, data = vitcap)
summary(model_vitcap_age)
summary(model_vitcap_gange_age)
summary(model_vitcap_gange_age)
anova(model_vitcap_age,model_vitcap_gange_age)
pearson(model_vitcap_gange_age)
library(mosaic)
library(mosaic)
vitcap <- read.delim("http://asta.math.aau.dk/dan/static/datasets?file=vitcap.txt")
head(vitcap)
vitcap
library(mosaic)
gf_boxplot(vital.capacity ~ exposure, data = vitcap)
model_vitcap <- lm(vital.capacity ~ exposure, data = vitcap)
summary(model_vitcap)
model_vitcap_age <- lm(vital.capacity ~ exposure + age, data = vitcap)
model_vitcap_gange_age <- lm(vital.capacity ~ exposure * age, data = vitcap)
summary(model_vitcap_age)
summary(model_vitcap_gange_age)
summary(model_vitcap_gange_age)
anova(model_vitcap_age,model_vitcap_gange_age)
pearson(model_vitcap_gange_age)
summary(model_vitcap_age)
summary(model_vitcap_gange_age)
summary(model1)
summary(model2)
model1 <- lm(vital.capacity ~ age*z2, data = vitcap)
model2 <- lm(vital.capacity ~ age*z1 + age*z2, data = vitcap)
summary(model1)
summary(model2)
summary(model1)
summary(model2)
summary(model1)
summary(model2)
summary(model_vitcap_gange_age)
0.6745+1.5*IQR_value
-0.6745-1.5*IQR_value
IQR_value <- 0.6745+0.6745
IQR_value
IQR_value <- 0.6745+0.6745
IQR_value
0.6745+1.5*IQR_value
-0.6745-1.5*IQR_value
vector <- c(-2.698, 2.698)
pdist("norm", vector)
library(mosaic)
pdist("norm", vector)
pdist("norm", vector)
library(shiny); runApp('GitHub/Datavisualisering_mini_projekt_2021/mini_App08.R')
install.packages("installr")
library(installr)
updateR()
updateR()
runApp('GitHub/Datavisualisering_mini_projekt_2021/mini_App08.R')
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("readxl")
install.packages("shiny")
install.packages("vroom")
library(shiny); runApp('GitHub/Datavisualisering_mini_projekt_2021/mini_App08.R')
library(shiny); runApp('GitHub/Datavisualisering_mini_projekt_2021/mini_App09.R')
